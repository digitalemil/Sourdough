<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<title>lesfleurs</title>
	<link rel='stylesheet' href='../stylesheets/stylenoir.css' />

</head>

<body id="body" style="background-color: black;">
	<script>
		let email = "<%= email %>";
		// Paste the following snippet in the head element of your page or pages.

		(function () {
			var webSdkScript = document.createElement("script");

			webSdkScript.src =
				"https://unpkg.com/@grafana/faro-web-sdk@^1.0.0/dist/bundle/faro-web-sdk.iife.js";

			webSdkScript.onload = () => {
				window.GrafanaFaroWebSdk.initializeFaro({
					url: "<%= farourl %>/<%= farokey %>",
					app: {
						name: "appserver",
						version: "1.0.0",
						user: email
					},
				});

				// Load instrumentations at the onLoad event of the web-SDK and after the above configuration.
				// This is important because we need to ensure that the Web-SDK has been loaded and initialized before we add further instruments!
				var webTracingScript = document.createElement("script");

				webTracingScript.src =
					"https://unpkg.com/@grafana/faro-web-tracing@^1.0.0/dist/bundle/faro-web-tracing.iife.js";

				// Initialize, configure (if necessary) and add the the new instrumentation to the already loaded and configured Web-SDK.
				webTracingScript.onload = () => {
					window.GrafanaFaroWebSdk.faro.instrumentations.add(
						new window.GrafanaFaroWebTracing.TracingInstrumentation({
							// Optional, if you want to add custom attributes to the resource
							resourceAttributes: {
								"service.name": "thegym-browser",
								"user": email
							}
						}))
				};
				// Append the Web Tracing script script tag to the HTML page
				document.head.appendChild(webTracingScript);
			};

			// Append the Web-SDK script script tag to the HTML page
			document.head.appendChild(webSdkScript);
		})();
	</script>


	<div id="container" style="scale: 0.85; position: absolute; top:0px; left: 160px;"
		onmousedown="createFleur(); showLesFleurs(-1)">
		<div id="lafleur" frameBorder="0" style="width: 1024px; height: 1024px;"></div>
	</div>
	<div id="lesfleurs" style='color: #FFFFF0;font-family: "Italiana", regular; font-size: 64px;text-align: left; height:640px; position: absolute; top: 0px; left: 240px;'>
		<div id="stars" style="display: inline-block;"><%= stars %> none.</div>
		<img id="r0" hidden width="64px" src="../images/star.svg"></img>
		<img id="r1" hidden width="64px" src="../images/star.svg"></img>
		<img id="r2" hidden width="64px" src="../images/star.svg"></img>
		<img id="r3" hidden width="64px" src="../images/star.svg"></img>
		<img id="r4" hidden width="64px" src="../images/star.svg"></img>
	</div>

	<div id="menu" class="sidenav">
		<div style="position: absolute; top: 64px;">
			<div onclick="withcolor= true; createFleur()">New</div>
			<p></p>
			<a id="random" href="/app/first">First</a>
			<a id="random" href="/app/last">Last</a>
			<a id="random" href="/app/random">Random</a>
			<input style='border: 0; width: 80%; background-color: #FFFFF0;font-family: "Italiana", regular; font-size: 24px;text-align: center;' id="search" value=""></input>
			<p></p>
			<button class="button" style="width: 80%; height: 30px; text-align: center; background-color: #FFFFF0;" onclick="search()">Search</button>
		
			<p></p>
			<div>
				Stars:
				<p></p>
				<button class="button" style="width: 128px; background-color: #FFFFF0;" onclick="showLesFleurs(1)">1</button>
				<p></p>
				<button class="button" style="width: 128px; background-color: #FFFFF0;" onclick="showLesFleurs(2)">2</button>
				<p></p>
				<button class="button" style="width: 128px; background-color: #FFFFF0;" onclick="showLesFleurs(3)">3</button>
				<p></p>
				<button class="button" style="width: 128px; background-color: #FFFFF0;" onclick="showLesFleurs(4)">4</button>
				<p></p>
				<button class="button" style="width: 128px; background-color: #FFFFF0;" onclick="showLesFleurs(5)">5</button>
				<p></p>
			</div>
			<div onclick="download()">Download SVG</div>
			<a id="SQL" href="/app/sql.html">SQL</a>
			<a id="docs" href="/app/docsvg" target="_blank">Documentation</a>
			<p></p>
			<a id="logout" href="../logout">Logout</a>
		</div>
	</div>
	</div>

</body>
<script>
	let module= new Object();
</script>
<script src="creator.js"></script>
<script>
	let svg = "";
		withcolor= false;
	let hiddenmenu= false;

	document.getElementById("body").addEventListener("keydown", review);

	function search() {
		let name= document.getElementById("search").value;
		document.location="/app/search?name="+encodeURIComponent(name);
	}

	function download() {
		const blob = new Blob([svg.toString()]);
  		const element = document.createElement("a");
  		element.download = "lafleur.svg";
  		element.href = window.URL.createObjectURL(blob);
  		element.click();
  		element.remove();
	}

	function review(event) {
		let key = event.keyCode;
		if (key >= 48 && key < 54)
			showLesFleurs(key - 48)
		if(key== 77) {
			let m= document.getElementById("menu");
			if(hiddenmenu) {
				m.style.display="block";
			}
			else {
				m.style.display="none";
			}
			hiddenmenu= !hiddenmenu;
		}

	};

	function displaylesfleurs(r) {
		if(r>0) {
			document.getElementById("stars").innerHTML="<%= stars %>";
		}
		else {
			document.getElementById("stars").innerHTML="<%= stars %> none";
		}
		if (r > 4.9)
			r = 5;
		for (let i = 0; i < 5; i++) {
			let e = document.getElementById("r" + i);
			if (i < Math.floor(r)) {
				e.style = "height; 64px; width: 64px;";
				e.removeAttribute("hidden");
			}
			else
				e.setAttribute("hidden", true);
			let p = r - Math.floor(r);
			if (p > 0 && i == Math.floor(r)) {
				e.style = "height; 64px; width: " + (64.0 * p) + "px;";
				e.removeAttribute("hidden");
			}
		}
	}
	function showLesFleurs(n) {
		displaylesfleurs(n);
		if (n < 0)
			return;
		svg = svg.replace("</desc>", ' stars=' + n + "</desc>");
		thisrating = n;
		if(id== 0)
			setTimeout(persist, 200)
		else 
			setTimeout(rate, 200);
	};

	function persist() {
		post(false);
	};

	function rate() {
		post(true);
	};

	function post(rating) {
		var xhttp = new XMLHttpRequest();
		if (!rating) {
			xhttp.open("POST", "/app/rose", true);
			xhttp.setRequestHeader('Content-type', 'application/xml');
			xhttp.onreadystatechange = function () {
				if (xhttp.readyState == XMLHttpRequest.DONE) {
					id = xhttp.responseText;
				}
			}
			xhttp.send(svg);
		}
		else {
			xhttp.open("POST", "/app/rating", true);
			xhttp.setRequestHeader('Content-type', 'application/json');
			xhttp.onreadystatechange = function () {
				if (xhttp.readyState == XMLHttpRequest.DONE) {
					displaylesfleurs(parseFloat(xhttp.responseText));
				}
			}
			xhttp.send(JSON.stringify({ rating: thisrating, id: id }));
		}
	}
	function createFleur() {
		showLesFleurs(-1);
		id= 0;
		svg= createSVG();
		reting= 0;
		showLesFleurs(0);
		document.getElementById("lafleur").innerHTML = svg;
	};


	function showExisting(xml, r, f) {
		id = f;
		document.getElementById('lafleur').innerHTML = xml;
		rating = r;
		displaylesfleurs(rating)
	};
	
	let id = 0;
	let rating = 0;
	let thisrating = null;
	<%- action %>

</script>

</html>